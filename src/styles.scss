@use "@angular/material" as mat;
@use "app/theming" as app;
@use "sass:map";
@use "app/theming/_customMixins" as customMixins;

@import "/src/app/theming/gradients";
@import "/src/app/theming/material-override";

// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();

$app-primary: mat.define-palette(mat.$indigo-palette);
$app-accent: mat.define-palette(mat.$pink-palette);

// Use your own "app" define-light-theme function instead of "mat" one.
$app-theme: app.define-light-theme((color: (primary: $app-primary, accent: $app-accent)));

@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Outfit';
  src: url('assets/fonts/Outfit-Medium.ttf');
}

$svg-invert-white: 1;
$svg-sepia-white: 0.64;
$svg-invert-white: 1;
$svg-invert-white: 1;
$svg-invert-white: 1;
$svg-invert-white: 1;


:root {
  pointer-events: all;

  --theme-dark-background-light: #243b55;
  --theme-dark-background-dark: #141e30;
  --theme-dark-text-color: #ffffff;

  --violetta-primary: #be2d0d;
  --violetta-secondary: #4e3498;

  --candy-primary: #f7a2e4;
  --candy-secondary: #fccb1a;

  --land-stroke: 0.4px;


  --color-scheme: dark;
  --current-color: var(--theme-dark-text-color);

  /* SVG related */
  --svg-invert: 100%;
  --svg-sepia: 64%;
  --svg-saturate: 2%;
  --svg-hue-rotate: 3deg;
  --svg-brightness: 104%;
  --svg-contrast: 101%;

  /* Map related */
  --map-land: #80808033;
  --map-land-stroke: #ffffffff;
  --map-land-found: #347b98ff;
  --map-land-selected: #fdfdfdff;
  --map-group-selected: #fdfdfd4f;
  --map-land-error: #be2d0dff;
  --map-land-won: #fccb1aff;
}


html,
body {
  height: 100vh;
  max-height: -webkit-fill-available;
}

html {
  &.cdk-global-scrollblock {
    position: static;
    overflow-y: hidden;
  }

  color: var(--current-color);
  color-scheme: var(--color-scheme);

  body {
    display: flex;
    flex-direction: column;
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
  }
}

#app-background {
  position: fixed;
  width: 100%;
  height: 100%;
  background-repeat: no-repeat, no-repeat;
  background-attachment: fixed, fixed;
  background-position: center center, center center;
  background-image: $radial-gradient-dark;
  background-color: var(--theme-dark-background-light);
  z-index: -1;
}

@include customMixins.scrollbar('custom-scrollbar', false);

/*removes highlighting on tap on mobile devices*/
* {
  -webkit-tap-highlight-color: transparent;
}

/* Disable image drag*/
img {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}


.error,
.won,
.found,
.selected {
  .zone {
    stroke-width: calc(var(--land-stroke) * 5);
  }
}


.error {
  fill: var(--map-land-error);
  background-color: var(--map-error);

  .zone {
    stroke: var(--map-land-error);
  }
}

.won {
  fill: var(--map-land-won);
  background-color: var(--map-won);

  .zone {
    stroke: var(--map-land-won);
  }
}

.separator {
  fill: none;
  stroke: white;
}

.zone {
  fill: transparent;
  stroke-dasharray: 3px;
}

.land {
  fill: var(--map-land);
  background-color: var(--map-land);
}

.land,
.zone {
  stroke: white;
  stroke-width: var(--land-stroke);
}

.found {

  &,
  .land {
    fill: var(--map-land-found);
    background-color: var(--map-land-found);
  }

  .zone {
    stroke: var(--map-land-found);
  }
}

.selected {

  &,
  .land {
    fill: var(--map-land-selected);
    background-color: var(--map-land-selected);
  }

  .zone {
    stroke: var(--map-land-selected);
  }
}



.group-selected {
  &.land {
    stroke-width: calc(var(--land-stroke) * 3);
  }

  &.land:not(.found) {
    fill: var(--map-group-selected);
    background-color: var(--map-land-selected);
  }

  &.zone {
    stroke-width: calc(var(--land-stroke) * 3);
  }
}



@include customMixins.scrollbar('.mat-select-panel', true);
@include customMixins.scrollbar('.custom-scrollbar', true);

// generic template logo and title
.logo-and-title {
  padding: 0.25rem;
  gap: 0.5rem;
  display: flex;
  align-items: center;
  -webkit-user-select: none;
  user-select: none;
  text-transform: uppercase;
  font-weight: 300;
  font-size: 1rem;
  border-radius: 0.5rem;
  cursor: pointer;

  img {
    height: 30px;
  }
}
