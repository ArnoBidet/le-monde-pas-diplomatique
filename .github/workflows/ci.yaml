name: CI

on:
  push:
    branches:
    - main

jobs:
  setting-versionning:
    if: "!contains(github.event.head_commit.message, 'Set to version')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: 18
    - name: Install dependencies
      run: npm install
    - name: Calculating current version
      id: version
      run: |
        echo "::set-output name=new_version::$(npx git-conventional-commits version | tr -d '\n')"
    - name: Putting version number in files
      run: |
         sed -Ei "s/(version: \").*(\")/\1${{ steps.version.outputs.new_version }}\2/g" src/environments/environment.prod.ts
    - name: Setting up git config
      env:
        GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
        GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
      run: |
        git config --global user.email "$GIT_EMAIL"
        git config --global user.name "$GIT_USERNAME"
    - name: Commiting changes
      run: |
        git add src/environments/environment.prod.ts
        git commit -m "ci: Set to version ${{ steps.version.outputs.new_version }}"
        git push
    - name: Tagging version
      run: |
        git tag "v${{ steps.version.outputs.new_version }}"
        git push --tags
  firebase-deploy:
    needs: setting-versionning
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: 18
    - name: Install dependencies
      run: npm install
    - name: Building
      run: npm run build
    - uses: w9jds/firebase-action@master
      with:
        args: deploy --only hosting
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
